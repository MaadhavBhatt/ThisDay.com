@use 'sass:map';
@use 'sass:string';
@use 'sass:color';
@use '_breakpoints' as *;
@use '_functions' as func;

$_btn-dark: hsl(0 0% 25%);
$_btn-light: hsl(0 0% 90%);

@mixin mq($key) {
  $size: map.get($breakpoints, $key);

  @media screen and (min-width: $size) {
    @content;
  }
}

@mixin theme-mq($preference: dark) {
  @media screen and (prefers-color-scheme: $preference) {
    @content;
  }
}

@mixin pseudo($loc: before, $content: '', $pos: absolute, $inset: 0 0 0 0, $relative: true) {
  @if $relative {
    position: relative;
  }

  &::#{$loc} {
    content: $content;
    position: $pos;
    inset: $inset;
    @content;
  }
}

@mixin animate($animation, $duration, $fill-mode) {
  animation: $animation $duration $fill-mode;
}

@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

@mixin button(
  $bg: $_btn-light,
  $color: $_btn-dark,
  $border-thickness: 2px,
  $border-color: func.change-color-lightness($bg, 5%),
  $border-style: solid,
  $border-rad: 0,
  $padding: 0.5em 1em,
  $box-shadow: 0 0 0.5em $bg,

  $hover--bg: func.change-color-lightness($color, 5%),
  $hover--color: func.change-color-lightness($bg, 5%),
  $hover--border-thickness: $border-thickness,
  $hover--border-color: $hover--bg,
  $hover--border-style: $border-style,
  $hover--border-rad: $border-rad,
  $hover--padding: $padding,
  $hover--box-shadow: 0 0 0.5em $hover--bg,

  $focus--bg: $hover--bg,
  $focus--color: $hover--color,
  $focus--border-thickness: $hover--border-thickness,
  $focus--border-color: $hover--border-color,
  $focus--border-style: $hover--border-style,
  $focus--border-rad: $hover--border-rad,
  $focus--padding: $hover--padding,
  $focus--box-shadow: 0 0 0.5em $focus--bg,

  $active--bg: $hover--bg,
  $active--color: $hover--color,
  $active--border-thickness: $hover--border-thickness,
  $active--border-color: $hover--border-color,
  $active--border-style: $hover--border-style,
  $active--border-rad: $hover--border-rad,
  $active--padding: $hover--padding,
  $active--box-shadow: 0 0 0.5em $active--bg,

  $disabled--bg: $bg,
  $disabled--color: $color,
  $disabled--border-thickness: $border-thickness,
  $disabled--border-color: $border-color,
  $disabled--border-style: $border-style,
  $disabled--border-rad: $border-rad,
  $disabled--padding: $padding,
  $disabled--box-shadow: 0 0 0.5em $disabled--bg,

  $transition: true,
  $transition-duration: 0.2s,
  $transition-timing-function: ease-in-out,
  $transition-delay: 0s
) {
  --flow-spacer: 0.8em;

  display: inline-block;

  @if $transition {
    transition: background-color $transition-duration $transition-timing-function $transition-delay,
      color $transition-duration $transition-timing-function $transition-delay,
      border-color $transition-duration $transition-timing-function $transition-delay,
      border-width $transition-duration $transition-timing-function $transition-delay,
      border-style $transition-duration $transition-timing-function $transition-delay,
      border-radius $transition-duration $transition-timing-function $transition-delay,
      padding $transition-duration $transition-timing-function $transition-delay,
      box-shadow $transition-duration $transition-timing-function $transition-delay;
  }

  background-color: $bg;
  color: $color;
  border: $border-thickness $border-style $border-color;
  border-radius: $border-rad;
  padding: $padding;
  box-shadow: $box-shadow;

  &:hover {
    background-color: $hover--bg;
    color: $hover--color;
    border: $hover--border-thickness $hover--border-style $hover--border-color;
    border-radius: $hover--border-rad;
    padding: $hover--padding;
    box-shadow: $hover--box-shadow;
  }

  &:focus {
    background-color: $focus--bg;
    color: $focus--color;
    border: $focus--border-thickness $focus--border-style $focus--border-color;
    border-radius: $focus--border-rad;
    padding: $focus--padding;
    box-shadow: $focus--box-shadow;
  }

  &:active {
    background-color: $active--bg;
    color: $active--color;
    border: $active--border-thickness $active--border-style $active--border-color;
    border-radius: $active--border-rad;
    padding: $active--padding;
    box-shadow: $active--box-shadow;
  }

  &:disabled {
    background-color: $disabled--bg;
    color: $disabled--color;
    border: $disabled--border-thickness $disabled--border-style $disabled--border-color;
    border-radius: $disabled--border-rad;
    padding: $disabled--padding;
    box-shadow: $disabled--box-shadow;
  }
}
